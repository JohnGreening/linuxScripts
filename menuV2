#!/bin/bash
# Project-aware dev menu

set -u

# =========================
# Configure your projects
# One line per project:
#   key|Display Name|Project Dir|ASM filename|NEX filename|Graphics update cmd
# =========================
PROJECTS=(
  "pogopaul|Pogo Paul|/home/john/dev/pogopaul|pogopaul.asm|pogopaul.nex|update-pogo-graphics"
  "connect4|Connect 4|/home/john/dev/connect4|connect4.asm|connect4.nex|update-connect4-graphics"
  # Add more like:
  # "myother|My Other Game|/home/john/dev/myother|myother.asm|myother.nex|update-myother-graphics"
)

# Static tools (change if needed)
NEXTSPRITE_DIR="/home/john/Downloads/spritedesign"
NEXTSPRITE_CMD="./NextSprite"
BIN_DIR="/home/john/bin"
SYNC_CMD="sync-to-github"

# =========================
# Internal storage
# =========================
declare -A P_KEY P_NAME P_DIR P_ASM P_NEX P_GFX
KEYS=()
for i in "${!PROJECTS[@]}"; do
  IFS='|' read -r key name dir asm nex gfx <<< "${PROJECTS[$i]}"
  KEYS+=("$key")
  P_KEY["$i"]="$key"
  P_NAME["$i"]="$name"
  P_DIR["$i"]="$dir"
  P_ASM["$i"]="$asm"
  P_NEX["$i"]="$nex"
  P_GFX["$i"]="$gfx"
done

pick_project() {
  echo ""
  echo "Select a project:"
  for i in "${!PROJECTS[@]}"; do
    printf "%2d) %s  (%s)\n" $((i + 1)) "${P_NAME[$i]}" "${P_DIR[$i]}"
  done
  printf "%2d) Exit\n" $(( ${#PROJECTS[@]} + 1 ))

  while true; do
    read -rp "Enter choice [1-$(( ${#PROJECTS[@]} + 1 ))]: " pchoice
    [[ "$pchoice" =~ ^[0-9]+$ ]] || { echo "Enter a number."; continue; }
    (( pchoice == ${#PROJECTS[@]} + 1 )) && exit 0
    (( pchoice >= 1 && pchoice <= ${#PROJECTS[@]} )) && break
    echo "Invalid choice."
  done

  idx=$((pchoice - 1))
  CUR_NAME="${P_NAME[$idx]}"
  CUR_DIR="${P_DIR[$idx]}"
  CUR_ASM="${P_ASM[$idx]}"
  CUR_NEX="${P_NEX[$idx]}"
  CUR_GFX="${P_GFX[$idx]}"
  CUR_KEY="${P_KEY[$idx]}"

  echo ""
  echo ">> Current project: $CUR_NAME"
  echo "   Dir: $CUR_DIR"
  echo "   ASM: $CUR_ASM"
  echo "   NEX: $CUR_NEX"
}

run_in_dir() {
  local dir="$1"; shift
  echo "Changing to: $dir"
  cd "$dir" || { echo "Failed to change directory."; return 1; }
  echo "Running: $*"
  eval "$@"
}

# First pick
pick_project

while true; do
  echo ""
  echo "Select an option (project: $CUR_NAME):"
  echo "  1) Build            (build-next $CUR_ASM)"
  echo "  2) Run CSpect       (run-cspect $CUR_NEX)"
  echo "  3) Run NextSprite Designer"
  echo "  4) Update Graphics  ($CUR_GFX)"
  echo "  5) Sync to Github   ($SYNC_CMD)"
  echo "  6) Change Project"
  echo "  7) Exit"

  read -rp "Enter choice [1-7]: " choice
  [[ "$choice" =~ ^[0-9]+$ ]] || { echo "Enter a number."; continue; }

  case "$choice" in
    1)
      run_in_dir "$CUR_DIR" "build-next \"$CUR_ASM\""
      ;;
    2)
      run_in_dir "$CUR_DIR" "run-cspect \"$CUR_NEX\""
      ;;
    3)
      run_in_dir "$NEXTSPRITE_DIR" "$NEXTSPRITE_CMD"
      ;;
    4)
      run_in_dir "$BIN_DIR" "$CUR_GFX"
      ;;
    5)
      run_in_dir "$BIN_DIR" "$SYNC_CMD"
      ;;
    6)
      pick_project
      ;;
    7)
      echo "Goodbye!"
      exit 0
      ;;
    *)
      echo "Invalid choice."
      ;;
  esac
done

